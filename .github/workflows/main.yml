# Nome da Pipeline
name: TDW_Tomas_Sousa#2

# Quando a pipeline vai correr. Sempre que houver commit para qualquer branch (push) ou sempre que houver um pull request para qualquer branch
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

# Definição dos jobs que vão correr em paralelo
jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Limpar a cache (opcional)
      - name: Clear npm cache
        run: npm cache clean --force

      # Instalar todas as dependências
      - name: Install dependencies
        run: npm install
        working-directory: ./aula_02-10

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install-dependencies  # Isto depende de install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Instalar Jest
      - name: Install Jest
        run: npm install jest
        working-directory: ./aula_02-10

      # Correr todos os testes automáticos
      - name: Run tests
        run: npm test -- -u 
        working-directory: ./aula_02-10

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./aula_02-10/coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    needs: run-tests  # Isto depende da passagem dos testes
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'  # Só vai se na branch master ou main
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Instalar as dependências novamente (para garantir que estão disponíveis)
      - name: Install dependencies
        run: npm install
        working-directory: ./aula_02-10
        
        # Verificar o conteúdo da pasta após o build
      - name: List contents of build directory
        run: ls -la ./aula_02-10

      # Construir o projeto
      - name: Build Project
        run: npm run build
        working-directory: ./aula_02-10

  deploy:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    needs: build-project  # Isto depende da passagem do build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'  # Só vai se na branch master ou main
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Verify .next directory
        run: ls -la ./aula_02-10/.next
      # Executar o comando de deploy
      - name: Deploy to Netlify
        run: npx netlify-cli deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --dir ./aula_02-10/.next --prod
        working-directory: ./aula_02-10
