name: TDW_Tomas_Sousa#2

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm install
        working-directory: ./aula_02-10

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Jest
        run: npm install jest
        working-directory: ./aula_02-10

      - name: Run tests
        run: npm test -- -u 
        working-directory: ./aula_02-10

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./aula_02-10/coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    needs: run-tests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./aula_02-10
        
      - name: Build Project
        run: npm run build
        working-directory: ./aula_02-10

      - name: Create output directory
        run: mkdir -p ./aula_02-10/out
        working-directory: ./aula_02-10

      - name: List files in build directory
        run: ls -la ./aula_02-10/out
        working-directory: ./aula_02-10

  deploy:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    needs: build-project
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Set Netlify Debug Mode
        run: echo "NETLIFY_BUILD_DEBUG=true" >> $GITHUB_ENV

      - name: Deploy to Netlify
        run: npx netlify-cli deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --prod

